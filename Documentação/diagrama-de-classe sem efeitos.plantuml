@startuml diagrama
skinparam linetype ortho
skinparam classAttributeIconSize 0
skinparam nodesep 200
skinparam ranksep 150

entity Carta{
    - Texto : string
    + RealizarEfeitos() : void
}

entity Casa{
    - Nome: string
    - Posicao : int

    + RealizarEfeitos() : void
}

enum Cor{
    AMARELO
    AZUL
    BRANCO
    LARANJA
    MARROM
    VERMELHO
    ROXO
}

interface Efeito{
    + RealizarEfeito() : void
}

entity Jogador{
    - Saldo : int
    - Posicao: int
    + EfeitoHabeasCorpus: EfeitoHabeasCorpus

    - JogarDado(): int
    - GanharDinheiroPorVolta(): void
    + Receber(int): void
    + Pagar(int): void
    + IniciarRodada() : void
    + Mover(int) : void
    + Teleportar(int) : void
}

enum Personagem{
    BARCO
    CACHORRO
    CARRO
    GATO
}

entity Propriedade{
    - Preco: int
    - Aluguel: int
    - AluguelDobrado : bool

    + RealizarEfeitos() : void
    + ChecarProprietario(Jogador) : bool
    + CobrarAluguel(): int
    + Comprar(Jogador): void
}

entity Tabuleiro <<singleton>>{
    <u>- Instance : Tabuleiro</u>

    <u>+ GetInstance() : Tabuleiro</u>
    + ProximoJogador() : void
    + JogadorAtual(): Jogador
}

Carta o- "*...*" Efeito : - Efeitos

Casa --|> Propriedade
Casa --> "1...1" Efeito : - Efeito

Jogador  o-- "1...*" Propriedade : + Propriedades
Jogador --> "1...1" Personagem : - Personagem
Jogador --> Efeito : + EfeitoInicial

Propriedade --> "1..1" Cor : + Cor
Propriedade --> Jogador: - Proprietario

Tabuleiro *- "1...*" Jogador : + Jogadores
Tabuleiro *- "1...*" Casa : + Casas
Tabuleiro *- "1...*" Carta : + Cartas

@enduml